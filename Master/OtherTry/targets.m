function sim=targets(p,v,m)
%---------------------------------------------------------------------------------------------------------------------------
% Parameters: default cost
%---------------------------------------------------------------------------------------------------------------------------
p.chi1_T=m.chiTss0; 
p.chi1_N=m.chiNss0; 
%---------------------------------------------------------------------------------------------------------------------------
% Value function iteration
%---------------------------------------------------------------------------------------------------------------------------
[v.idB,v.idD,v.q]=vfi(p,v);
%---------------------------------------------------------------------------------------------------------------------------
% Simulation
%---------------------------------------------------------------------------------------------------------------------------
p.Get=5000;
r=simulation(p,v);
%---------------------------------------------------------------------------------------------------------------------------
% Estimation based on simulated data
%---------------------------------------------------------------------------------------------------------------------------
if p.moment==1
%---------------------------------------------------------------------------------------------------------------------------
% Method of moments
%---------------------------------------------------------------------------------------------------------------------------
    sim.RelativeStd=zeros(p.Get,1);
    sim.MeanSpread=zeros(p.Get,1);
    for i=1:p.Get
    [~,SyT2]=hpfilter(log(r.yT(i,:)),p.lambdaHP);
    [~,SyN2]=hpfilter(log(r.yN(i,:)),p.lambdaHP);
    sim.RelativeStd(i,:)=std(SyT2)/std(SyN2);
    rr=r.spread(i,:);
    sim.MeanSpread(i,:)=mean(rr(isfinite(rr)));
    end
    sim.Moment1=mean(sim.RelativeStd);
    sim.Moment2=mean(sim.MeanSpread);
else
%---------------------------------------------------------------------------------------------------------------------------
% Indirect inference
%---------------------------------------------------------------------------------------------------------------------------
for i=1:p.Get
    % Tradable
    [~,SyT2]=hpfilter(log(r.yT(i,:)),p.lambdaHP);
    [beta1,~]=Obstfeld_Gourinchas(SyT2,r.def(i,:)',p.Nhorz);
    sim.betayT(i,:)=beta1(2,p.Nhorz+1);
    % Nontradable
    [~,SyN2]=hpfilter(log(r.yN(i,:)),p.lambdaHP);
    [beta2,~]=Obstfeld_Gourinchas(SyN2,r.def(i,:)',p.Nhorz);
    sim.betayN(i,:)=beta2(2,p.Nhorz+1);
end
sim.betaAverageT=mean(sim.betayT,'omitnan');
sim.betaAverageN=mean(sim.betayN,'omitnan');
end
%---------------------------------------------------------------------------------------------------------------------------
end